.container.mt-4
  .row
    .col-12
      %h1.mb-4
        %i.fas.fa-slack.text-primary.me-2
        Slack Integration Dashboard
      
      - if @organizations.present?
        .alert.alert-info
          %i.bi.bi-info-circle.me-2
          %strong Select an organization to configure Slack integration
      
      - if @organizations.present?
        .card.mb-4
          .card-header
            %h5.mb-0 Organizations
          .card-body
            .row
              - @organizations.each do |organization|
                .col-md-6.mb-3
                  .card.border{hclass: organization.slack_configured? ? 'border-success' : 'border-secondary'}
                    .card-body
                      %h6.card-title= organization.display_name
                      - if organization.slack_configured?
                        .alert.alert-success.mb-2
                          %i.bi.bi-check-circle.me-2
                          %strong Slack Installed
                          %br
                          %small= organization.slack_configuration.workspace_name
                        .btn-group.w-100
                          %button.btn.btn-outline-primary.btn-sm{onclick: "loadOrganizationConfig(#{organization.id})"}
                            %i.bi.bi-gear.me-1
                            Configure
                          = link_to "Uninstall", slack_oauth_uninstall_path(organization_id: organization.id), 
                            method: :delete, 
                            class: "btn btn-outline-danger btn-sm",
                            data: { confirm: "Are you sure you want to uninstall Slack from #{organization.display_name}?" }
                      - else
                        .alert.alert-warning.mb-2
                          %i.bi.bi-exclamation-triangle.me-2
                          %strong Slack Not Installed
                        = link_to "Install Slack", slack_oauth_authorize_path(organization_id: organization.id), 
                          class: "btn btn-primary btn-sm w-100"
      
      .card.mb-4
        .card-header
          %h5.mb-0 Configuration Status
        .card-body
          #slack-config-status
            .text-center
              .spinner-border.text-primary{role: "status"}
                %span.visually-hidden Loading...
      
      .row
        .col-md-6
          .card.mb-4
            .card-header
              %h5.mb-0 Test Connection
            .card-body
              %p Test your Slack bot connection and verify authentication.
              %button.btn.btn-primary#test-connection-btn
                %i.fas.fa-plug.me-2
                Test Connection
              #test-connection-result.mt-3
          
          .card.mb-4
            .card-header
              %h5.mb-0 List Channels
            .card-body
              %p View all channels your bot has access to.
              %button.btn.btn-info#list-channels-btn
                %i.fas.fa-list.me-2
                List Channels
              #channels-list.mt-3
        
        .col-md-6
          .card.mb-4
            .card-header
              %h5.mb-0 Send Test Message
            .card-body
              %p Send a test message to verify posting works.
              .mb-3
                %label.form-label Channel
                %input.form-control#test-channel{type: "text", placeholder: "#general", value: "#general"}
              .mb-3
                %label.form-label Message
                %textarea.form-control#test-message{rows: "3", placeholder: "Test message from Our Gruuv Huddle Bot!"}
                  🧪 Test message from Our Gruuv Huddle Bot!
              %button.btn.btn-success#send-test-message-btn
                %i.fas.fa-paper-plane.me-2
                Send Test Message
              #test-message-result.mt-3
      
      .card.mt-4
        .card-header
          %h5.mb-0 Integration Information
        .card-body
          .row
            .col-md-6
              %h6 Environment Variables
              %ul.list-unstyled
                %li
                  %strong SLACK_BOT_TOKEN:
                  %code#bot-token-status
                %li
                  %strong SLACK_DEFAULT_CHANNEL:
                  %code#default-channel-status
                %li
                  %strong SLACK_BOT_USERNAME:
                  %code#bot-username-status
                %li
                  %strong SLACK_BOT_EMOJI:
                  %code#bot-emoji-status
            .col-md-6
              %h6 Message Templates
              %ul.list-unstyled
                %li
                  %strong Huddle Created:
                  %small.text-muted.d-block
                    %code "🎯 New huddle created: *%{huddle_name}* by %{creator_name}"
                %li
                  %strong Huddle Started:
                  %small.text-muted.d-block
                    %code "🚀 Huddle starting: *%{huddle_name}* - Join now!"
                %li
                  %strong Feedback Requested:
                  %small.text-muted.d-block
                    %code "📝 Feedback requested for *%{huddle_name}* - %{participation_rate}% participation"
                %li
                  %strong Huddle Completed:
                  %small.text-muted.d-block
                    %code "✅ Huddle completed: *%{huddle_name}* - Nat 20 Score: %{nat_20_score}"

:javascript
  let currentOrganizationId = null;
  
  document.addEventListener('DOMContentLoaded', function() {
    // Test connection button
    document.getElementById('test-connection-btn').addEventListener('click', testConnection);
    
    // List channels button
    document.getElementById('list-channels-btn').addEventListener('click', listChannels);
    
    // Send test message button
    document.getElementById('send-test-message-btn').addEventListener('click', sendTestMessage);
  });
  
  function loadOrganizationConfig(organizationId) {
    currentOrganizationId = organizationId;
    loadConfigurationStatus();
  }
  
  function loadConfigurationStatus() {
    const url = currentOrganizationId 
      ? `/slack/configuration_status?organization_id=${currentOrganizationId}`
      : '/slack/configuration_status';
    
    fetch(url)
      .then(response => response.json())
      .then(data => {
        const statusDiv = document.getElementById('slack-config-status');
        if (data.bot_token_configured) {
          statusDiv.innerHTML = `
            <div class="alert alert-success">
              <i class="fas fa-check-circle me-2"></i>
              <strong>Slack Integration Configured</strong><br>
              Organization: ${data.organization_name || 'Global'}<br>
              Workspace: ${data.workspace_name || 'N/A'}<br>
              Default Channel: ${data.default_channel}<br>
              Bot Username: ${data.bot_username}<br>
              Bot Emoji: ${data.bot_emoji}
            </div>
          `;
        } else {
          statusDiv.innerHTML = `
            <div class="alert alert-warning">
              <i class="fas fa-exclamation-triangle me-2"></i>
              <strong>Slack Integration Not Configured</strong><br>
              ${data.organization_name ? `Please install Slack for ${data.organization_name} using the button above.` : 'Please set the SLACK_BOT_TOKEN environment variable to enable Slack integration.'}
            </div>
          `;
        }
        
        // Update environment variable display
        document.getElementById('bot-token-status').textContent = data.bot_token_configured ? 'Configured' : 'Not Set';
        document.getElementById('default-channel-status').textContent = data.default_channel;
        document.getElementById('bot-username-status').textContent = data.bot_username;
        document.getElementById('bot-emoji-status').textContent = data.bot_emoji;
        
        // Show/hide test buttons based on configuration
        const testButtons = document.querySelectorAll('#test-connection-btn, #list-channels-btn, #send-test-message-btn');
        testButtons.forEach(btn => {
          btn.disabled = !data.bot_token_configured;
        });
      })
      .catch(error => {
        console.error('Error loading configuration status:', error);
        document.getElementById('slack-config-status').innerHTML = `
          <div class="alert alert-danger">
            <i class="fas fa-times-circle me-2"></i>
            Error loading configuration status
          </div>
        `;
      });
  }
  
  function testConnection() {
    if (!currentOrganizationId) {
      alert('Please select an organization first');
      return;
    }
    
    const button = document.getElementById('test-connection-btn');
    const resultDiv = document.getElementById('test-connection-result');
    
    button.disabled = true;
    button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Testing...';
    resultDiv.innerHTML = '';
    
    fetch(`/slack/test_connection?organization_id=${currentOrganizationId}`)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          resultDiv.innerHTML = `
            <div class="alert alert-success">
              <i class="fas fa-check-circle me-2"></i>
              <strong>Connection Successful!</strong><br>
              Team: ${data.team} (${data.team_id})<br>
              Bot User: ${data.user} (${data.user_id})
            </div>
          `;
        } else {
          resultDiv.innerHTML = `
            <div class="alert alert-danger">
              <i class="fas fa-times-circle me-2"></i>
              <strong>Connection Failed</strong><br>
              ${data.error}
            </div>
          `;
        }
      })
      .catch(error => {
        console.error('Error testing connection:', error);
        resultDiv.innerHTML = `
          <div class="alert alert-danger">
            <i class="fas fa-times-circle me-2"></i>
            Error testing connection
          </div>
        `;
      })
      .finally(() => {
        button.disabled = false;
        button.innerHTML = '<i class="fas fa-plug me-2"></i>Test Connection';
      });
  }
  
  function listChannels() {
    if (!currentOrganizationId) {
      alert('Please select an organization first');
      return;
    }
    
    const button = document.getElementById('list-channels-btn');
    const resultDiv = document.getElementById('channels-list');
    
    button.disabled = true;
    button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Loading...';
    resultDiv.innerHTML = '';
    
    fetch(`/slack/list_channels?organization_id=${currentOrganizationId}`)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          const channelsHtml = data.channels.map(channel => `
            <div class="d-flex justify-content-between align-items-center p-2 border-bottom">
              <div>
                <strong>${channel.name}</strong>
                ${channel.is_private ? '<span class="badge bg-secondary ms-2">Private</span>' : ''}
              </div>
              <small class="text-muted">${channel.id}</small>
            </div>
          `).join('');
          
          resultDiv.innerHTML = `
            <div class="alert alert-info">
              <i class="fas fa-info-circle me-2"></i>
              <strong>Found ${data.channels.length} channels</strong>
            </div>
            <div class="border rounded">
              ${channelsHtml}
            </div>
          `;
        } else {
          resultDiv.innerHTML = `
            <div class="alert alert-danger">
              <i class="fas fa-times-circle me-2"></i>
              <strong>Failed to load channels</strong><br>
              ${data.error}
            </div>
          `;
        }
      })
      .catch(error => {
        console.error('Error listing channels:', error);
        resultDiv.innerHTML = `
          <div class="alert alert-danger">
            <i class="fas fa-times-circle me-2"></i>
            Error loading channels
          </div>
        `;
      })
      .finally(() => {
        button.disabled = false;
        button.innerHTML = '<i class="fas fa-list me-2"></i>List Channels';
      });
  }
  
  function sendTestMessage() {
    if (!currentOrganizationId) {
      alert('Please select an organization first');
      return;
    }
    
    const button = document.getElementById('send-test-message-btn');
    const resultDiv = document.getElementById('test-message-result');
    const channel = document.getElementById('test-channel').value;
    const message = document.getElementById('test-message').value;
    
    button.disabled = true;
    button.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Sending...';
    resultDiv.innerHTML = '';
    
    const formData = new FormData();
    formData.append('organization_id', currentOrganizationId);
    formData.append('channel', channel);
    formData.append('message', message);
    
    fetch('/slack/post_test_message', {
      method: 'POST',
      body: formData
    })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          resultDiv.innerHTML = `
            <div class="alert alert-success">
              <i class="fas fa-check-circle me-2"></i>
              <strong>Message Sent Successfully!</strong><br>
              Channel: ${data.channel}<br>
              Timestamp: ${data.timestamp}
            </div>
          `;
        } else {
          resultDiv.innerHTML = `
            <div class="alert alert-danger">
              <i class="fas fa-times-circle me-2"></i>
              <strong>Failed to Send Message</strong><br>
              ${data.error}
            </div>
          `;
        }
      })
      .catch(error => {
        console.error('Error sending test message:', error);
        resultDiv.innerHTML = `
          <div class="alert alert-danger">
            <i class="fas fa-times-circle me-2"></i>
            Error sending test message
          </div>
        `;
      })
      .finally(() => {
        button.disabled = false;
        button.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Send Test Message';
      });
  } 