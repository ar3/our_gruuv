-# Assignment Job Description Partial
-# Usage: = render 'assignment_job_description', pa: pa, assignment_type: 'required' or 'suggested'

%h5.mb-0
  %strong= pa.assignment.title
  = link_to assignment_path(pa.assignment), target: "_blank", class: "ms-2 text-muted" do
    %i.bi.bi-link-45deg

%p.mb-2
  %small.text-muted.fst-italic
    - if pa.min_estimated_energy.present? && pa.max_estimated_energy.present?
      (likely #{pa.min_estimated_energy}% to #{pa.max_estimated_energy}% of your energy)
    - elsif pa.max_estimated_energy.present?
      (up to #{pa.max_estimated_energy}% of your energy)
    - elsif pa.min_estimated_energy.present?
      (at least #{pa.min_estimated_energy}% of your energy)
    - else
      (at least 5% of your energy)

.assignment-details.ms-4.ps-3.border-start.border-2{class: assignment_type == 'required' ? 'border-primary' : 'border-info'}
  - if pa.assignment.tagline.present?
    %p.mb-2= pa.assignment.tagline
  
  %p.mb-1.text-muted
    %span='… as measured by –'
    - if pa.assignment.outcomes.any?
      %ul.mt-0
        - pa.assignment.outcomes.each do |outcome|
          %li.text-muted
            = outcome.description
    - else
      %span.text-muted outcomes to be determined
  
  %p.mb-2.text-muted
    %span='… needing Abilities such as –'
    - if pa.assignment.abilities.any?
      - pa.assignment.assignment_abilities.each do |aa|
        %span.badge{class: assignment_type == 'required' ? 'bg-primary' : 'bg-info', class: 'me-1'}
          = aa.ability.name
          %small.ms-1 (#{milestone_level_display(aa.milestone_level)})
          = link_to ability_path(aa.ability), target: "_blank", class: "ms-1 text-white" do
            %i.bi.bi-link-45deg
    - else
      %span.text-muted ability milestones to be determined
