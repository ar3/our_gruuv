- content_for :header do
  .d-flex.align-items-center
    %h1.mb-0.me-2
      %i.bi.bi-eye.me-2
      Observations
    .d-flex.align-items-center
      - if policy(Observation).create?
        = link_to new_organization_observation_path(@organization), class: "btn btn-primary ml-2" do
          %i.bi.bi-plus
      - else
        .btn.btn-primary.disabled.disabled-button
          %i.bi.bi-plus
        %i.bi.bi-exclamation-triangle.text-warning.ms-2{"data-bs-toggle" => "tooltip", "data-bs-title" => "You need to be a teammate to create observations"}

- content_for :go_back_link do
  = link_to dashboard_organization_path(@organization), class: "go-back-link" do
    %i.bi.bi-arrow-left.me-2
    Back to Dashboard

- content_for :header_action do
  %button.btn.btn-outline-secondary{"data-bs-toggle" => "modal", "data-bs-target" => "#observations-filter-modal", type: "button"}
    %i.bi.bi-funnel.me-2
    Filter & Sort

/ Spotlight Section
.row.justify-content-center.mb-4
  .col-lg-12
    .card.border-0.shadow-sm
      .card-body
        .row
          .col-md-8
            / Main statistics/metrics area
            .row.text-center
              .col-3
                .h3.text-primary= @observations.where(observed_at: 1.week.ago..).count
                %small.text-muted This Week
              .col-3
                .h3.text-info= @observations.where(privacy_level: :observer_only).count
                %small.text-muted Journal Entries
              .col-3
                .h3.text-success= @observations.where(privacy_level: :public_observation).count
                %small.text-muted Public Recognition
              .col-3
                .h3.text-warning= @observations.joins(:observation_ratings).distinct.count('observations.id')
                %small.text-muted With Ratings
          .col-md-4
            / Action alerts or status messages
            - if @observations.empty?
              .alert.alert-info.small
                %i.bi.bi-info-circle.me-2
                %strong Start giving feedback to your teammates
            - elsif @observations.where(privacy_level: :observer_only).count > @observations.where(privacy_level: :public_observation).count
              .alert.alert-warning.small
                %i.bi.bi-lightbulb.me-2
                %strong Consider sharing more observations publicly
      .card-footer.bg-light
        .row.align-items-center
          .col-md-6
            %small.text-muted
              %i.bi.bi-funnel.me-1
              Filters: All observations
              %br
              %i.bi.bi-sort-down.me-1
              Sort: Most recent
          .col-md-6.text-end
            %small.text-muted
              %i.bi.bi-table.me-1
              View: Cards
              %br
              %i.bi.bi-eye.me-1
              Spotlight: Overview

/ Main Content Area
.row.justify-content-center
  .col-lg-12
    - if @observations.any?
      .table-responsive
        %table.table.table-hover
          %thead
            %tr
              %th Story
              %th Privacy
              %th Feelings
              %th Ratings
              %th Observer
              %th Observed
              %th Date
              %th Actions
          %tbody
            - @observations.each do |observation|
              %tr
                %td
                  = truncate(observation.story, length: 100)
                %td
                  %span{class: "badge #{observation.decorate.visibility_text_style}"}
                    = observation.decorate.visibility_icon
                    = observation.decorate.visibility_text
                %td
                  - if observation.primary_feeling.present?
                    = observation.decorate.feelings_display_html
                  - else
                    %span.text-muted No feelings
                %td
                  - if observation.observation_ratings.any?
                    - assignment_ratings = observation.observation_ratings.select { |r| r.rateable_type == 'Assignment' }
                    - ability_ratings = observation.observation_ratings.select { |r| r.rateable_type == 'Ability' }
                    - aspiration_ratings = observation.observation_ratings.select { |r| r.rateable_type == 'Aspiration' }
                    - rating_texts = []
                    - assignment_ratings.each do |rating|
                      - rating_texts << capture { render('organizations/observations/assignment_rating', observation_rating: rating, include_assignment_name: true) }
                    - ability_ratings.each do |rating|
                      - rating_texts << capture { render('organizations/observations/ability_rating', observation_rating: rating, include_ability_name: true) }
                    - aspiration_ratings.each do |rating|
                      - rating_texts << capture { render('organizations/observations/aspiration_rating', observation_rating: rating, include_aspiration_name: true) }
                    != rating_texts.join(', ')
                  - else
                    .alert.alert-danger.mb-0.small.py-1.px-2
                      %i.bi.bi-exclamation-triangle.me-1
                      nothing rated
                %td
                  = observation.observer.preferred_name || observation.observer.first_name
                %td
                  - if observation.observed_teammates.any?
                    - names = observation.observed_teammates.map { |teammate| teammate.person.preferred_name || teammate.person.first_name }
                    = names.join(', ')
                  - else
                    %span.text-muted No one
                %td
                  = observation.observed_at.strftime('%b %d, %Y')
                %td
                  .btn-group.btn-group-sm
                    = link_to observation.decorate.permalink_path, class: "btn btn-outline-primary", title: "Public permalink" do
                      %i.bi.bi-link-45deg
                    = link_to organization_observation_path(@organization, observation), class: "btn btn-outline-primary", title: "Show page" do
                      %i.bi.bi-eye
                    - if policy(observation).update?
                      = link_to edit_organization_observation_path(@organization, observation), class: "btn btn-outline-secondary" do
                        %i.bi.bi-pencil
                    - if policy(observation).destroy?
                      = link_to organization_observation_path(@organization, observation), method: :delete, class: "btn btn-outline-danger", data: { confirm: "Are you sure?" } do
                        %i.bi.bi-trash
    - else
      .alert.alert-info
        %h6.mb-2
          %i.bi.bi-info-circle.me-2
          No Observations Created
        %p.mb-2 
          Start by creating your first observation to give feedback to your teammates.
          = link_to "Create First Observation", new_organization_observation_path(@organization), class: "btn btn-primary btn-sm"

/ Modal for Filter & Sort
.modal.fade#observations-filter-modal{"aria-hidden" => "true", "aria-labelledby" => "observations-filter-modal-label", tabindex: "-1"}
  .modal-dialog.modal-lg
    .modal-content
      .modal-header
        %h5.modal-title#observations-filter-modal-label
          %i.bi.bi-funnel.me-2
          Filter & Sort Observations (coming soon)
        %button.btn-close{"aria-label" => "Close", "data-bs-dismiss" => "modal", type: "button"}
      .modal-body
        .row
          .col-md-6
            %h6.mb-3
              %i.bi.bi-funnel.me-2
              Filters
            %h6 Privacy Level
            .form-check
              = check_box_tag 'privacy[]', 'observer_only', false, class: 'form-check-input', id: 'privacy_observer_only'
              = label_tag 'privacy_observer_only', 'üîí Journal Entries', class: 'form-check-label'
            .form-check
              = check_box_tag 'privacy[]', 'observed_only', false, class: 'form-check-input', id: 'privacy_observed_only'
              = label_tag 'privacy_observed_only', 'üë§ 1-on-1 Feedback', class: 'form-check-label'
            .form-check
              = check_box_tag 'privacy[]', 'managers_only', false, class: 'form-check-input', id: 'privacy_managers_only'
              = label_tag 'privacy_managers_only', 'üëî Managers Only', class: 'form-check-label'
            .form-check
              = check_box_tag 'privacy[]', 'observed_and_managers', false, class: 'form-check-input', id: 'privacy_observed_and_managers'
              = label_tag 'privacy_observed_and_managers', 'üë• Full Transparency', class: 'form-check-label'
            .form-check
              = check_box_tag 'privacy[]', 'public_observation', false, class: 'form-check-input', id: 'privacy_public'
              = label_tag 'privacy_public', 'üåç Public Recognition', class: 'form-check-label'
            .mb-3
              %h6 Timeframe
              .form-check
                = radio_button_tag 'timeframe', 'this_week', false, class: 'form-check-input', id: 'timeframe_this_week'
                = label_tag 'timeframe_this_week', 'This Week', class: 'form-check-label'
              .form-check
                = radio_button_tag 'timeframe', 'this_month', false, class: 'form-check-input', id: 'timeframe_this_month'
                = label_tag 'timeframe_this_month', 'This Month', class: 'form-check-label'
              .form-check
                = radio_button_tag 'timeframe', 'all', true, class: 'form-check-input', id: 'timeframe_all'
                = label_tag 'timeframe_all', 'All Time', class: 'form-check-label'
          .col-md-6
            %h6.mb-3
              %i.bi.bi-sort-down.me-2
              Sort Options
            = select_tag 'sort', options_for_select(observation_sort_options, 'observed_at_desc'), { class: 'form-select' }
            .mb-3
              %label.form-label View Style
              .form-check
                %input.form-check-input{checked: "checked", type: "radio", name: "viewStyle", value: "table"}
                %label.form-check-label
                  %i.bi.bi-table.me-2
                  Table View
              .form-check
                %input.form-check-input{type: "radio", name: "viewStyle", value: "cards"}
                %label.form-check-label
                  %i.bi.bi-grid.me-2
                  Card View
              .form-check
                %input.form-check-input{type: "radio", name: "viewStyle", value: "list"}
                %label.form-check-label
                  %i.bi.bi-list.me-2
                  List View
            .mb-3
              %label.form-label Spotlight
              %select.form-select
                %option No Spotlight
                %option Overview
                %option My Journal
                %option Team Wins
                %option This Week
      .modal-footer
        %button.btn.btn-secondary{"data-bs-dismiss" => "modal", type: "button"} Cancel
        %button.btn.btn-primary.disabled{type: "button"}
          %i.bi.bi-check.me-2
          Apply Filters
