- content_for :header do
  %h1.mb-0= @person.display_name
  %small.text-muted Growth & Development View

- content_for :header_action do
  = render 'view_switcher'

- content_for :go_back_link do
  = link_to organization_employees_path(@current_organization), class: "go-back-link" do
    %i.bi.bi-arrow-left.me-2
    ="Back to Teammates in #{@current_organization.display_name}"

/ Position Information Section
.card.mb-4{ role: "region", "aria-labelledby": "position-section" }
  .card-header
    %h5.mb-0{ id: "position-section" }
      %i.bi.bi-briefcase.me-2
      Current Position
  .card-body
    - if @current_employment&.position
      .row
        .col-md-8
          %h4.mb-3= @current_employment.position.display_name
          
          %p
            %strong Company:
            = @current_employment.company.display_name
          
          %p
            %strong Position Type:
            = @current_employment.position.position_type&.external_title || 'Not specified'
          
          %p
            %strong Position Level:
            = @current_employment.position.position_level&.level || 'Not specified'
          
          - if @current_employment.position.position_summary.present?
            .mt-3
              %h6 Summary:
              %p= @current_employment.position.position_summary
        .col-md-4.border-start.border-secondary
          .d-grid.gap-2
            = link_to organization_position_path(@current_organization, @current_employment.position), class: "btn btn-outline-primary" do
              %i.bi.bi-eye.me-2
              View Position Details
            = link_to edit_organization_position_path(@current_organization, @current_employment.position), class: "btn btn-outline-secondary" do
              %i.bi.bi-pencil.me-2
              Edit Position
    - else
      .alert.alert-warning
        %h6.mb-2
          %i.bi.bi-exclamation-triangle.me-2
          No Current Position
        %p.mb-0 This person does not have an active employment tenure with a position.

/ Active Assignment Tenures Section
- teammate = @person.teammates.find_by(organization: @current_organization)
- if teammate&.assignment_tenures&.active&.any?
  .card.mb-4{ role: "region", "aria-labelledby": "assignments-section" }
    .card-header
      %h5.mb-0{ id: "assignments-section" }
        %i.bi.bi-list-task.me-2
        Active Assignments
        %a.text-decoration-none.ms-3{"data-bs-toggle" => "collapse", "data-bs-target" => "#assignmentsCollapse", "aria-expanded" => "true", "aria-controls" => "assignmentsCollapse"}
          %span#assignmentsExpandIcon.not-collapsed
            %i.bi.bi-chevron-up
            %small.text-muted (Hide assignments)
          %span#assignmentsCollapseText.collapsed
            %i.bi.bi-chevron-down
            %small.text-muted="(Show #{pluralize(teammate.assignment_tenures.active.count, 'assignment')})"
    .card-body
      .collapse.show#assignmentsCollapse
        %p.text-muted.mb-3
          %em These are the specific assignments this person is currently working on.
        
        - teammate.assignment_tenures.active.includes(:assignment).each_with_index do |tenure, index|
          - if index > 0
            %hr.my-4
          
          .card.mb-3
            .card-header
              .d-flex.justify-content-between.align-items-center
                .d-flex.align-items-center.flex-grow-1
                  %h6.mb-0.me-3
                    %i.bi.bi-clipboard-check.me-2
                    = tenure.assignment.title
                  
                  / Current Energy Allocation
                  - if tenure.anticipated_energy_percentage.present?
                    .me-3
                      %span.badge.bg-info.me-1= "#{tenure.anticipated_energy_percentage}%"
                      %small.text-muted= "for #{distance_of_time_in_words(tenure.started_at, Date.current)}"
                  
                  / Last Check-in Rating
                  - latest_check_in = AssignmentCheckIn.where(teammate: teammate, assignment: tenure.assignment).recent.first
                  - if latest_check_in && (latest_check_in.employee_rating.present? || latest_check_in.manager_rating.present?)
                    .me-3
                      - rating = latest_check_in.manager_rating.presence || latest_check_in.employee_rating
                      - badge_class = rating == 'exceeding' ? 'bg-success' : rating == 'meeting' ? 'bg-primary' : 'bg-warning'
                      %span.badge{class: badge_class}= rating.humanize
                      %small.text-muted.ms-1= "as of #{latest_check_in.check_in_started_on.strftime('%b %d')}"
                
                / Expand/Collapse Button
                %a.text-decoration-none{"data-bs-toggle" => "collapse", "data-bs-target" => "#assignment-#{tenure.id}", "aria-expanded" => "false", "aria-controls" => "assignment-#{tenure.id}"}
                  %span.not-collapsed{"id" => "assignmentExpandIcon-#{tenure.id}"}
                    %i.bi.bi-chevron-up
                    %small.text-muted (Hide details)
                  %span.collapsed{"id" => "assignmentCollapseText-#{tenure.id}"}
                    %i.bi.bi-chevron-down
                    %small.text-muted (Show details)
            .card-body
              .collapse{"id" => "assignment-#{tenure.id}"}
                .row
                  .col-md-8
                    / Assignment-Specific Information
                    %h6.mb-3 Assignment Details
                    %p
                      %strong Assignment:
                      = link_to tenure.assignment.title, organization_assignment_path(@current_organization, tenure.assignment), class: "text-decoration-none"
                    
                    - if tenure.assignment.tagline.present?
                      %p
                        %strong Tagline:
                        = tenure.assignment.tagline
                    
                    - if tenure.assignment.required_activities.present?
                      %p
                        %strong Required Activities:
                        = tenure.assignment.required_activities
                    
                    / Assignment Outcomes
                    - outcomes = tenure.assignment.assignment_outcomes
                    - if outcomes.any?
                      .mt-3
                        %h6 Outcomes:
                        %ul.mb-0
                          - outcomes.each do |outcome|
                            %li= outcome.description
                    
                    / Assignment Abilities
                    - abilities = tenure.assignment.assignment_abilities.includes(:ability)
                    - if abilities.any?
                      .mt-3
                        %h6 Required Abilities:
                        %ul.mb-0
                          - abilities.each do |assignment_ability|
                            %li= "#{assignment_ability.ability.name} - Level #{assignment_ability.milestone_level}"
                  
                  .col-md-4.border-start.border-secondary
                    .d-grid.gap-2
                      / Tenure Information
                      .mb-3
                        %h6.mb-2
                          %i.bi.bi-clock-history.me-2
                          Tenure Details
                        %p.mb-1
                          %strong Started:
                          = tenure.started_at.strftime('%b %d, %Y')
                        
                        %p.mb-1
                          %strong Duration:
                          = distance_of_time_in_words(tenure.started_at, Date.current)
                        
                        - if tenure.anticipated_energy_percentage.present?
                          %p.mb-1
                            %strong Forecasted Energy:
                            = "#{tenure.anticipated_energy_percentage}%"
                        
                        / Energy Comparison
                        - position_assignment = @current_employment&.position&.position_assignments&.find_by(assignment: tenure.assignment)
                        - if position_assignment&.min_estimated_energy.present? || position_assignment&.max_estimated_energy.present?
                          %p.mb-1
                            %strong Expected Range:
                            = position_assignment.energy_range_display
                          
                          - if tenure.anticipated_energy_percentage.present?
                            - min_energy = position_assignment.min_estimated_energy || 0
                            - max_energy = position_assignment.max_estimated_energy || 100
                            - if tenure.anticipated_energy_percentage < min_energy
                              .alert.alert-warning.mt-2.p-2
                                %i.bi.bi-exclamation-triangle.me-2
                                %strong Below Expected Range
                                %br
                                %small Anticipated energy (#{tenure.anticipated_energy_percentage}%) is below the minimum expected (#{min_energy}%)
                            - elsif tenure.anticipated_energy_percentage > max_energy
                              .alert.alert-warning.mt-2.p-2
                                %i.bi.bi-exclamation-triangle.me-2
                                %strong Above Expected Range
                                %br
                                %small Anticipated energy (#{tenure.anticipated_energy_percentage}%) exceeds the maximum expected (#{max_energy}%)
                            - else
                              .alert.alert-success.mt-2.p-2
                                %i.bi.bi-check-circle.me-2
                                %strong Within Expected Range
                                %br
                                %small Anticipated energy (#{tenure.anticipated_energy_percentage}%) is within the expected range (#{min_energy}%-#{max_energy}%)
                      
                      / Check-in Information
                      - latest_check_in = AssignmentCheckIn.where(teammate: teammate, assignment: tenure.assignment).recent.first
                      - if latest_check_in
                        .mb-3
                          %h6.mb-2
                            %i.bi.bi-calendar-check.me-2
                            Latest Check-in
                          %p.mb-1
                            %strong Date:
                            = latest_check_in.check_in_started_on.strftime('%b %d, %Y')
                          
                          - if latest_check_in.actual_energy_percentage.present?
                            %p.mb-1
                              %strong Actual Energy:
                              = "#{latest_check_in.actual_energy_percentage}%"
                          
                          - if latest_check_in.employee_rating.present?
                            %p.mb-1
                              %strong Employee Rating:
                              %span.badge{class: latest_check_in.employee_rating == 'exceeding' ? 'bg-success' : latest_check_in.employee_rating == 'meeting' ? 'bg-primary' : 'bg-warning'}
                                = latest_check_in.employee_rating.humanize
                          
                          - if latest_check_in.manager_rating.present?
                            %p.mb-1
                              %strong Manager Rating:
                              %span.badge{class: latest_check_in.manager_rating == 'exceeding' ? 'bg-success' : latest_check_in.manager_rating == 'meeting' ? 'bg-primary' : 'bg-warning'}
                                = latest_check_in.manager_rating.humanize
                      
                      / Statistics
                      .mb-3
                        %h6.mb-2
                          %i.bi.bi-graph-up.me-2
                          Statistics
                        %p.mb-1
                          %strong Total Check-ins:
                          = AssignmentCheckIn.where(teammate: teammate, assignment: tenure.assignment).count
                        
                        %p.mb-1
                          %strong Open Check-ins:
                          = AssignmentCheckIn.where(teammate: teammate, assignment: tenure.assignment).open.count
                      
                      / Actions
                      = link_to organization_assignment_path(@current_organization, tenure.assignment), class: "btn btn-outline-primary" do
                        %i.bi.bi-eye.me-2
                        View Assignment
                      
                      = link_to organization_assignment_tenure_path(@person.current_organization_or_default, @person), class: "btn btn-outline-secondary" do
                        %i.bi.bi-list.me-2
                        Manage Tenures

/ Milestones Section
- if teammate&.teammate_milestones&.any?
  .card.mb-4{ role: "region", "aria-labelledby": "milestones-section" }
    .card-header
      %h5.mb-0{ id: "milestones-section" }
        %i.bi.bi-trophy.me-2
        Achieved Milestones
        %a.text-decoration-none.ms-3{"data-bs-toggle" => "collapse", "data-bs-target" => "#milestonesCollapse", "aria-expanded" => "true", "aria-controls" => "milestonesCollapse"}
          %span#milestonesExpandIcon.not-collapsed
            %i.bi.bi-chevron-up
            %small.text-muted (Hide milestones)
          %span#milestonesCollapseText.collapsed
            %i.bi.bi-chevron-down
            %small.text-muted="(Show #{pluralize(teammate.teammate_milestones.count, 'milestone')})"
    .card-body
      .collapse.show#milestonesCollapse
        %p.text-muted.mb-3
          %em These are the ability milestones this person has achieved.
        
        .row
          .col-md-8
            - teammate.teammate_milestones.includes(:ability).each_with_index do |milestone, index|
              - if index > 0
                %hr.my-3
              
              .d-flex.justify-content-between.align-items-center.py-2
                .flex-grow-1
                  %strong= milestone.ability.name
                  %br
                  %small.text-muted Milestone #{milestone.milestone_level}
                .text-muted
                  %small= milestone.created_at.strftime('%b %Y')
          .col-md-4.border-start.border-secondary
            .d-grid.gap-2
              = link_to organization_abilities_path(@current_organization), class: "btn btn-outline-primary" do
                %i.bi.bi-list.me-2
                View All Abilities
              = link_to new_organization_ability_path(@current_organization), class: "btn btn-outline-primary" do
                %i.bi.bi-plus-circle.me-2
                Create New Ability

/ No Data State
- if @current_employment&.position&.position_assignments&.empty? && teammate&.teammate_milestones&.empty? && teammate&.assignment_tenures&.active&.empty?
  .alert.alert-info
    %h6.mb-2
      %i.bi.bi-info-circle.me-2
      No Growth Data Available
    %p.mb-2 This person has no current assignments, milestones, or assignment tenures to display.
    = link_to "Edit Position", edit_organization_position_path(@current_organization, @current_employment.position), class: "btn btn-info btn-sm" if @current_employment&.position

.mt-5
  %p.text-muted
    %em This growth view provides a comprehensive overview of the person's current position, assignments, and achieved milestones for development planning and performance management.