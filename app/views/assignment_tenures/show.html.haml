- content_for :go_back_link do
  = link_to person_path(@person), class: "go-back-link" do
    %i.bi.bi-arrow-left.me-2
    Back to #{@person.display_name}'s Profile

- content_for :header do
  .d-flex.justify-content-between.align-items-center
    %h1.mb-0 Assignment Management for #{@person.display_name}
    = link_to choose_assignments_person_assignment_tenures_path(@person), class: "btn btn-primary" do
      %i.bi.bi-plus.me-2
      Choose Assignments

- content_for :header_action do
  %button.btn.btn-outline-secondary{"data-bs-toggle" => "modal", "data-bs-target" => "#assignmentTenuresFilterModal", type: "button"}
    %i.bi.bi-funnel.me-2
    Filter & Sort

  - if current_person == @person
    .row.mb-3
      .col-12
        .alert.alert-info.text-center.py-3
          %h4.mb-2 ðŸŽ¯ Modify Your Job Description
          %p.mb-0 Use this page to adjust your assignment energy percentages and provide check-ins on how things are going.
.row.justify-content-center
  .col-lg-12
    .card.mb-4
      .card-header
        %h5.mb-0 Current Position
      .card-body
        .position-info.mb-4.p-3.bg-light.rounded
          .row.align-items-center
            .col-md-8
              %p.mb-0
                %strong= @current_employment.position.display_name
                %br
                %small.text-muted
                  Company: #{@current_employment.company.name}
                  %br
                  Started: #{@current_employment.started_at.strftime('%B %d, %Y')}
                  - if @current_employment.ended_at
                    %br
                    Ended: #{@current_employment.ended_at.strftime('%B %d, %Y')}
                  - else
                    %br
                    %span.text-success Duration: #{((Date.current - @current_employment.started_at.to_date).to_i / 30.44).round(1)} months
            .col-md-4.text-end
            = link_to "View Position Details", edit_organization_position_path(@current_employment.position.position_type.organization, @current_employment.position), class: "btn btn-outline-primary btn-sm"
  
    .card
      .card-header
        %h5.mb-0 My Assignments

      .card-body
        - if @assignment_data.any?
          = form_with url: person_assignment_tenures_path(@person), method: :patch, local: true do |form|
            - is_employee_view = current_person == @person
            - is_manager_view = !is_employee_view
            
            .table-responsive
              %table.table.table-hover.table-bordered
                %thead.table-light
                  %tr
                    %th Assignment
                    %th Anticipated Energy
                    - if is_employee_view
                      %th Actual Energy
                      %th Personal Alignment
                      %th My Rating
                      %th Private Notes
                      %th Complete
                    - if is_manager_view
                      %th Manager Rating
                      %th Manager Notes
                      %th Complete
                    %th Status
                %tbody
                  - @assignment_data.each do |data|
                    - tenure_start = data[:tenure]&.started_at&.strftime('%B %d, %Y')
                    - employee_first_name = @person.first_name
                    - assignment_name = data[:assignment].title
                    
                    %tr
                      %td
                        %strong= data[:assignment].title
                        %br
                        %small.text-muted
                          - if data[:tenure]
                            Started #{tenure_start}
                          - else
                            Not started
                        - if data[:open_check_in]
                          %br
                          %small.text-info
                            %i.bi.bi-info-circle.me-1
                            Check-in #{data[:open_check_in].check_in_started_on.strftime('%m/%d/%Y')}
                        %br
                        = link_to "View History", check_in_history_person_assignment_path(@person, data[:assignment]), class: "btn btn-sm btn-outline-secondary"
                      
                      %td
                        = form.select "tenure_#{data[:assignment].id}_anticipated_energy", options_for_select((0..20).map { |i| ["#{i * 5}%", i * 5] }, data[:tenure]&.anticipated_energy_percentage), { prompt: 'Select...' }, { class: "form-select form-select-sm" }
                      
                      - if is_employee_view
                        %td
                          - if data[:open_check_in]
                            = form.select "check_in_#{data[:assignment].id}_actual_energy", options_for_select((0..20).map { |i| ["#{i * 5}%", i * 5] }, data[:open_check_in]&.actual_energy_percentage), { prompt: 'Select...' }, { class: "form-select form-select-sm", disabled: data[:open_check_in]&.employee_completed? }
                          - else
                            %span.text-muted No check-in
                        %td
                          - if data[:open_check_in]
                            = form.select "check_in_#{data[:assignment].id}_personal_alignment", options_for_select([['I love this', 'love'], ['I like this', 'like'], ['I\'m neutral', 'neutral'], ['I prefer not to do this', 'prefer_not'], ['Only if necessary', 'only_if_necessary']], data[:open_check_in]&.employee_personal_alignment), { prompt: 'Select...' }, { class: "form-select form-select-sm", disabled: data[:open_check_in]&.employee_completed? }
                          - else
                            %span.text-muted No check-in
                        %td
                          - if data[:open_check_in]
                            = form.select "check_in_#{data[:assignment].id}_employee_rating", options_for_select([['Working to Meet Expectations', 'working_to_meet'], ['Meeting Expectations', 'meeting'], ['Exceeding Expectations', 'exceeding']], data[:open_check_in]&.employee_rating), { prompt: 'Select...' }, { class: "form-select form-select-sm", disabled: data[:open_check_in]&.employee_completed? }
                          - else
                            %span.text-muted No check-in
                        %td
                          - if data[:open_check_in]
                            = form.text_area "check_in_#{data[:assignment].id}_employee_private_notes", value: data[:open_check_in]&.employee_private_notes, rows: 2, class: "form-control form-control-sm", placeholder: "Notes...", disabled: data[:open_check_in]&.employee_completed?
                          - else
                            %span.text-muted No check-in
                        %td.text-center
                          - if data[:open_check_in]
                            .form-check.form-switch.d-flex.justify-content-center
                              = form.check_box "check_in_#{data[:assignment].id}_employee_complete", { checked: data[:open_check_in].employee_completed?, class: "form-check-input completion-toggle", data: { target: "employee-fields-#{data[:assignment].id}" } }
                          - else
                            %span.text-muted No check-in
                      
                      - if is_manager_view
                        %td
                          - if data[:open_check_in]
                            = form.select "check_in_#{data[:assignment].id}_manager_rating", options_for_select([['Working to Meet Expectations', 'working_to_meet'], ['Meeting Expectations', 'meeting'], ['Exceeding Expectations', 'exceeding']], data[:open_check_in]&.manager_rating), { prompt: 'Select...' }, { class: "form-select form-select-sm", disabled: data[:open_check_in]&.manager_completed? }
                          - else
                            %span.text-muted No check-in
                        %td
                          - if data[:open_check_in]
                            = form.text_area "check_in_#{data[:assignment].id}_manager_private_notes", value: data[:open_check_in]&.manager_private_notes, rows: 2, class: "form-control form-control-sm", placeholder: "Notes...", disabled: data[:open_check_in]&.manager_completed?
                          - else
                            %span.text-muted No check-in
                        %td.text-center
                          - if data[:open_check_in]
                            .form-check.form-switch.d-flex.justify-content-center
                              = form.check_box "check_in_#{data[:assignment].id}_manager_complete", { checked: data[:open_check_in].manager_completed?, class: "form-check-input completion-toggle", data: { target: "manager-fields-#{data[:assignment].id}" } }
                          - else
                            %span.text-muted No check-in
                      
                      %td
                        - if data[:open_check_in]
                          .completion-status
                            - if data[:open_check_in].employee_completed?
                              %span.badge.bg-success.me-1 Employee âœ“
                              %br
                              %small.text-muted= data[:open_check_in].employee_completed_at.strftime('%m/%d %I:%M %p')
                              - if data[:open_check_in].employee_completed_by
                                %br
                                %small.text-muted by #{data[:open_check_in].employee_completed_by.first_name}
                            - else
                              %span.badge.bg-warning.me-1 Waiting Employee
                            
                            %br
                            
                            - if data[:open_check_in].manager_completed?
                              %span.badge.bg-success.me-1 Manager âœ“
                              %br
                              %small.text-muted= data[:open_check_in].manager_completed_at.strftime('%m/%d %I:%M %p')
                              - if data[:open_check_in].manager_completed_by
                                %br
                                %small.text-muted by #{data[:open_check_in].manager_completed_by.first_name}
                            - else
                              %span.badge.bg-warning.me-1 Waiting Manager
                        - else
                          %span.badge.bg-secondary No Check-in

            .row.mt-4
              .col-12.text-end
                = form.submit "Update #{@person.first_name}'s Assignments", class: "btn btn-primary"
        - else
          .alert.alert-info
            %h6.mb-2
              %i.bi.bi-info-circle.me-2
              No Assignments Found
            %p.mb-2 No assignments found for your current position.
            = link_to "Choose Assignments", choose_assignments_person_assignment_tenures_path(@person), class: "btn btn-primary btn-sm"

/ Modal for Filter & Sort
#assignmentTenuresFilterModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "assignmentTenuresFilterModalLabel", tabindex: "-1"}
  .modal-dialog.modal-lg
    .modal-content
      .modal-header
        %h5.modal-title#assignmentTenuresFilterModalLabel
          %i.bi.bi-funnel.me-2
          Filter & Sort Assignments (coming soon)
        %button.btn-close{"aria-label" => "Close", "data-bs-dismiss" => "modal", type: "button"}
      .modal-body
        .row
          .col-md-6
            %h6.mb-3
              %i.bi.bi-funnel.me-2
              Filters
            .mb-3
              %label.form-label Assignment Status
              .form-check
                %input.form-check-input{checked: "checked", type: "checkbox", name: "status", value: "active"}
                %label.form-check-label Active Assignments
              .form-check
                %input.form-check-input{type: "checkbox", name: "status", value: "inactive"}
                %label.form-check-label Inactive Assignments
            .mb-3
              %label.form-label Energy Level
              %select.form-select
                %option All Energy Levels
                %option Low (0-25%)
                %option Medium (26-75%)
                %option High (76-100%)
          .col-md-6
            %h6.mb-3
              %i.bi.bi-sort-down.me-2
              Sort Options
            .mb-3
              %label.form-label Sort By
              %select.form-select
                %option Assignment Name
                %option Energy Level
                %option Start Date
                %option Last Check-in
            .mb-3
              %label.form-label View Style
              .form-check
                %input.form-check-input{checked: "checked", type: "radio", name: "viewStyle", value: "form"}
                %label.form-check-label
                  %i.bi.bi-card-text.me-2
                  Form View
              .form-check
                %input.form-check-input{type: "radio", name: "viewStyle", value: "table"}
                %label.form-check-label
                  %i.bi.bi-table.me-2
                  Table View
            .mb-3
              %label.form-label Spotlight
              %select.form-select
                %option No Spotlight
                %option High Energy Assignments
                %option Recent Check-ins
                %option Overdue Check-ins
      .modal-footer
        %button.btn.btn-secondary{"data-bs-dismiss" => "modal", type: "button"} Cancel
        %button.btn.btn-primary.disabled{type: "button"}
          %i.bi.bi-check.me-2
          Apply Filters

- content_for :stylesheets do
  :css
    .disabled {
      opacity: 0.6;
      pointer-events: none;
    }
    
    .completion-status .badge {
      font-size: 0.75rem;
    }
    
    .table td {
      vertical-align: middle;
    }
    
    .table .form-control-sm, .table .form-select-sm {
      min-width: 120px;
    }
    
    .table .form-control-sm {
      resize: vertical;
    }
    
    .completion-toggle {
      transform: scale(0.8);
    }

- content_for :javascript do
  :javascript
    document.addEventListener('DOMContentLoaded', function() {
      // Handle completion toggles
      document.querySelectorAll('.completion-toggle').forEach(function(toggle) {
        toggle.addEventListener('change', function() {
          const targetId = this.dataset.target;
          const targetFields = document.getElementById(targetId);
          
          if (targetFields) {
            const inputs = targetFields.querySelectorAll('input, select, textarea');
            inputs.forEach(function(input) {
              input.disabled = this.checked;
            }.bind(this));
            
            // Update visual state
            if (this.checked) {
              targetFields.classList.add('disabled');
            } else {
              targetFields.classList.remove('disabled');
            }
          } else {
            // For table layout, disable fields in the same row
            const row = this.closest('tr');
            if (row) {
              const inputs = row.querySelectorAll('input, select, textarea');
              inputs.forEach(function(input) {
                if (input !== this) { // Don't disable the toggle itself
                  input.disabled = this.checked;
                }
              }.bind(this));
            }
          }
        });
      });
    });
